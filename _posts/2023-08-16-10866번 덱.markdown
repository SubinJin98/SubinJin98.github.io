---
layout: post
title:  "10866번:: 덱"
excerpt: "백준 10866번:: 덱 (데크)"
date:   2023-08-16T2:58:00Z
categories:
    - Coding Test
tags:
    - Baekjoon
    - Deque
use_math: true
---

## ◽ 개요
---
### 알고리즘 유형
데크(Deque)

### 난이도
Silver 4
<br/><br/><br/>

## ◽ 문제
---
> <https://www.acmicpc.net/problem/10866>{: target="_blank"}

### 내용
정수를 저장하는 덱(Deque)를 구현한 다음, 입력으로 주어지는 명령을 처리하는 프로그램을 작성하시오.  
명령은 총 여덟 가지이다.  

- push_front X: 정수 X를 덱의 앞에 넣는다.
- push_back X: 정수 X를 덱의 뒤에 넣는다.
- pop_front: 덱의 가장 앞에 있는 수를 빼고, 그 수를 출력한다. 만약, 덱에 들어있는 정수가 없는 경우에는 -1을 출력한다.
- pop_back: 덱의 가장 뒤에 있는 수를 빼고, 그 수를 출력한다. 만약, 덱에 들어있는 정수가 없는 경우에는 -1을 출력한다.
- size: 덱에 들어있는 정수의 개수를 출력한다.
- empty: 덱이 비어있으면 1을, 아니면 0을 출력한다.
- front: 덱의 가장 앞에 있는 정수를 출력한다. 만약 덱에 들어있는 정수가 없는 경우에는 -1을 출력한다.
- back: 덱의 가장 뒤에 있는 정수를 출력한다. 만약 덱에 들어있는 정수가 없는 경우에는 -1을 출력한다.

### 입력
첫째 줄에 주어지는 명령의 수 $N (1 ≤ N ≤ 10,000)$이 주어진다. 둘째 줄부터 N개의 줄에는 명령이 하나씩 주어진다.  
주어지는 정수는 1보다 크거나 같고, 100,000보다 작거나 같다. 문제에 나와있지 않은 명령이 주어지는 경우는 없다.  

### 출력
출력해야하는 명령이 주어질 때마다, 한 줄에 하나씩 출력한다.
<br/><br/><br/>

## ◽ 풀이
---

- 덱(데크, Deque) : Double Ended Queue의 약자로, 양쪽 끝에서 삽입과 삭제가 모두 가능한 자료구조. 스택과 큐의 일반적인 동작 방식을 모두 지원한다.  

```python
from collections import deque

ordercnt = int(input())
orderlst = [input() for i in range(ordercnt)]
dq = deque()

for command in orderlst:
    if command[0:9] == "push_fron":
        split_command = command.split()
        x = int(split_command[1])
        dq.appendleft(x)
    elif command[0:9] == "push_back":
        split_command = command.split()
        x = int(split_command[1])
        dq.append(x)
    elif command == "pop_front":
        print(-1) if len(dq) == 0 else print(dq.popleft())
    elif command == "pop_back":
        print(-1) if len(dq) == 0 else print(dq.pop())
    elif command == "size":
        print(len(dq))
    elif command == "empty":
        print(1) if len(dq) == 0 else print(0)
    elif command == "front":
        print(-1) if len(dq) == 0 else print(dq[0])
    elif command == "back":
        print(-1) if len(dq) == 0 else print(dq[-1])
```

전 문제에서 모듈 최대한 안 쓰려 했다고 했는데...이 문제는 어쩔 수 없었음  
뭐 이런 문제가 다 있지  