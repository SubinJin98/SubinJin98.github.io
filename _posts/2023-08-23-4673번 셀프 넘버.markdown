---
layout: post
title:  "4673번:: 셀프 넘버"
excerpt: "백준 4673번:: 셀프 넘버 (브루트포스 알고리즘)"
date:   2023-08-23T4:24:00Z
categories:
    - Coding Test
tags:
    - Baekjoon
    - Math
    - Brute-force
use_math: true
---

## ◽ 개요
---
### 알고리즘 유형
수학(Math)  
브루트포스 알고리즘(Brute-force)

### 난이도
Silver 5
<br/><br/>

## ◽ 문제
---
> <https://www.acmicpc.net/problem/4673>{: target="_blank"}

### 내용
셀프 넘버는 1949년 인도 수학자 D.R. Kaprekar가 이름 붙였다. 양의 정수 n에 대해서 d(n)을 n과 n의 각 자리수를 더하는 함수라고 정의하자. 예를 들어, d(75) = 75+7+5 = 87이다.  
양의 정수 n이 주어졌을 때, 이 수를 시작해서 n, d(n), d(d(n)), d(d(d(n))), ...과 같은 무한 수열을 만들 수 있다.  
예를 들어, 33으로 시작한다면 다음 수는 33 + 3 + 3 = 39이고, 그 다음 수는 39 + 3 + 9 = 51, 다음 수는 51 + 5 + 1 = 57이다. 이런식으로 다음과 같은 수열을 만들 수 있다.

$33, 39, 51, 57, 69, 84, 96, 111, 114, 120, 123, 129, 141, ...$

n을 d(n)의 생성자라고 한다. 위의 수열에서 33은 39의 생성자이고, 39는 51의 생성자, 51은 57의 생성자이다. 생성자가 한 개보다 많은 경우도 있다. 예를 들어, 101은 생성자가 2개(91과 100) 있다.  
생성자가 없는 숫자를 셀프 넘버라고 한다. 100보다 작은 셀프 넘버는 총 13개가 있다. $1, 3, 5, 7, 9, 20, 31, 42, 53, 64, 75, 86, 97$  
10000보다 작거나 같은 셀프 넘버를 한 줄에 하나씩 출력하는 프로그램을 작성하시오.  

### 입력
입력은 없다.  

### 출력
10,000보다 작거나 같은 셀프 넘버를 한 줄에 하나씩 증가하는 순서로 출력한다.
<br/><br/><br/>

## ◽ 풀이
---
아이디어 : 10000개 요소가 있는 리스트를 만들고, 거기서 생성자 다 빼버리자  

```python
total = [i for i in range(1, 10001)]         # 전체 배열
iter = set()                                 # 생성자 배열 (중복 x)
sum = 0                                      # 생성자 카운트

for i in total:                              # 전체 배열 돌면서
    sum = i                                  # 자기 자신과
    str_i = str(i)
    for j in range(len(str_i)):
        sum += int(str_i[j])                 # 각 자릿수 더한 값을
    iter.add(sum)                            # 생성자 배열에 넣음

for i in total:                              # 다시 전체 배열에서
    if i not in iter:                        # 생성자 배열에 없는 값은
        print(i)                             # 셀프 넘버이므로 출력
```
