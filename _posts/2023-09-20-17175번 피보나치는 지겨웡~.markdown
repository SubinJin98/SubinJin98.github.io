---
layout: post
title:  "17175번:: 피보나치는 지겨웡~"
excerpt: "백준 17175번:: 피보나치는 지겨웡~ (동적 프로그래밍)"
date:   2023-09-20T6:18:00Z
categories:
    - Coding Test
tags:
    - Baekjoon
    - Dynamic Programming
use_math: true
---

## ◽ 개요
---
### 알고리즘 유형
동적 프로그래밍(Dynamic Programming)  

### 난이도
Silver 3
<br/><br/>

## ◽ 문제
---
> <https://www.acmicpc.net/problem/17175>{: target="_blank"}

### 내용
혁진이는 알고리즘 문제를 만들라는 독촉을 받아 스트레스다. 하지만 피보나치 문제는 너무 많이 봐서 지겹기 그지없다. 그러나 문제를 만들 시간이 없는 혁진이는 피보나치 문제를 응용해서 문제를 만들려 한다.  
```
int fibonacci(int n) { // 호출
  if (n < 2) {
    return n;
  }  
  return fibonacci(n-2) + fibonacci(n-1);
}
```
위와 같이 코딩하였을 때 fibonacci(n)를 입력했을 때에 fibonacci 함수가 호출되는 횟수를 계산해보자.

<br/>

### 입력
fibonacci 함수에 인자로 입력할 n이 주어진다. $(0 ≤ n ≤ 50)$  

### 출력
fibonacci 함수가 호출된 횟수를 출력한다.  
출력값이 매우 커질 수 있으므로 정답을 1,000,000,007 로 나눈 나머지를 출력한다.
<br/><br/><br/>

## ◽ 풀이
---

- 첫 번째 시도

```python
import sys
sys.setrecursionlimit(10**6)

n = int(input())
cnt = 1

def fibonacci(n):
    global cnt
    if n < 2:
        return n
    else:
        cnt += 2
        return fibonacci(n-2) + fibonacci(n-1)

fibonacci(n)

print(cnt % 1000000007)
```

이렇게 풀 경우 74%까지 돌아가다가 시간 초과가 뜬다.  
다이나믹 프로그래밍을 사용해서 재시도했다.  

- 두 번째 시도

```python
n = int(input())

# (i-1) + (i-2) = i / state : cnt?
cnt = [0 for _ in range(n+1)]

def fibonacci(n):
    global cnt
    if n < 2:
        cnt[-1] = 1
    else:
        cnt[0], cnt[1] = 1, 1
        for i in range(2, n+1):
            cnt[i] = cnt[i-1] + cnt[i-2] + 1

fibonacci(n)

print(cnt[-1] % 1000000007)
```

