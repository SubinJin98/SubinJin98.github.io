---
layout: post
title:  "2217번:: 로프"
excerpt: "백준 2217번:: 로프 (그리디)"
date:   2023-08-05T3:44:00Z
categories:
    - Coding Test
tags:
    - Baekjoon
    - Greedy
use_math: true
---

## ◽ 개요
---
### 알고리즘 유형
그리디(Greedy)

### 난이도
Silver 4
<br/><br/><br/>

## ◽ 문제
---
> <https://www.acmicpc.net/problem/2217>{: target="_blank"}

### 내용
N(1 ≤ N ≤ 100,000)개의 로프가 있다. 이 로프를 이용하여 이런 저런 물체를 들어올릴 수 있다. 각각의 로프는 그 굵기나 길이가 다르기 때문에 들 수 있는 물체의 중량이 서로 다를 수도 있다.  
하지만 여러 개의 로프를 병렬로 연결하면 각각의 로프에 걸리는 중량을 나눌 수 있다. k개의 로프를 사용하여 중량이 w인 물체를 들어올릴 때, 각각의 로프에는 모두 고르게 w/k 만큼의 중량이 걸리게 된다.  
각 로프들에 대한 정보가 주어졌을 때, 이 로프들을 이용하여 들어올릴 수 있는 물체의 최대 중량을 구해내는 프로그램을 작성하시오. 모든 로프를 사용해야 할 필요는 없으며, 임의로 몇 개의 로프를 골라서 사용해도 된다.  

### 입력
첫째 줄에 정수 N이 주어진다. 다음 N개의 줄에는 각 로프가 버틸 수 있는 최대 중량이 주어진다. 이 값은 10,000을 넘지 않는 자연수이다.  

### 출력
첫째 줄에 답을 출력한다.
<br/><br/><br/>

## ◽ 풀이
---
사용하는 로프 모두가 w/k만큼을 견뎌야 하므로, 가장 적은 중량을 견디는 로프 기준으로 계산한다.  
따라서, 최대 중량이 큰 로프 순서대로 정렬한 후 하나씩 꺼내서 로프 개수를 곱하는 방식으로 비교할 수 있다.  


```python
ncnt = int(input())                # 로프 개수
rp_max = []                        # 각 로프의 최대 중량 리스트

for i in range(ncnt):              # 로프 개수만큼
    rp_max.append(int(input()))    # rp_max 리스트에 입력값 추가

rp_max.sort()                      # 입력값 순서 정렬
cnt, max_wgt = 1, 0                # 로프 개수, 최대 중량 정의

while len(rp_max) >= 1:            # rp_max 리스트 요소가 1개 이상일 때
    wgt = rp_max.pop() * cnt       # 리스트에서 최대 중량을 가진 로프를 꺼내 로프 개수와 곱하고
    cnt += 1                       # 로프 개수 업데이트
    if wgt > max_wgt:              # 계산한 중량이 기존 최대 중량보다 크면
        max_wgt = wgt              # 최대 중량 재정의

print(max_wgt)
```

리스트 하나만 만들고, 요소를 꺼내서 비교하는 방식으로 공간을 최대한 덜 써보고자 했다.  