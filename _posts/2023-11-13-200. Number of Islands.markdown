---
layout: post
title:  "200. Number of Islands"
excerpt: "LeetCode 200. Number of Islands (섬의 개수)"
date:   2023-11-133T2:39:00Z
categories:
    - Coding Test
tags:
    - LeetCode
    - Array
    - DFS
    - BFS
use_math: true

---

## ◽ 개요
---
### Related Topics
배열(Array)  
너비 우선 탐색(BFS)  
깊이 우선 탐색(DFS)  

### 난이도 
Medium
<br/><br/>

## ◽ 문제
---
> <https://leetcode.com/problems/number-of-islands/>{: target="_blank"}
<br/>

### Description
Given an m x n 2D binary grid grid which represents a map of '1's (land) and '0's (water), return the number of islands.  
An island is surrounded by water and is formed by connecting adjacent lands horizontally or vertically. You may assume all four edges of the grid are all surrounded by water.
<br/><br/>

## ◽ 풀이
---
### 내 풀이

```python
grid = [
    ["1","1","1","1","0"],
    ["1","1","0","1","0"],
    ["1","1","0","0","0"],
    ["0","0","0","0","0"]
]

visited = [[0] * 5 for _ in range(5)]
cnt = 0

dx = [1, 0, -1, 0]
dy = [0, 1, 0, -1]

stack = (0, 0)

def dfs(stack):
    global cnt

    for neighbor in grid[*stack]:
        if visited[neighbor] == 0:
            cnt += 1
            dfs(neighbor)

dfs(stack)

for i in range(1, n+1):
    print(visited[i])
```

모르겠습니다...
<br/>

---
### 다른 풀이
아래 내용은 '파이썬 알고리즘 인터뷰' 책을 참고했다.  
<br/>

**1. DFS로 그래프 탐색**   

```python
def numIslands(self, grid: List[List[str]]) -> int:
    def dfs(i, j):
        # 더 이상 땅이 아닌 경우 종료
        if i < 0 or i >= len(grid) or \
           j < 0 or j >= len(grid[0]) or \
           grid[i][j] != '1':
                return
        
        grid[i][j] = 0

        # 동서남북 탐색
        dfs(i + 1, j)
        dfs(i - 1, j)
        dfs(i, j + 1)
        dfs(i, j - 1)
    
    count = 0
    for i in range(len(grid)):
        for j in range(len(grid[0])):
            if grid[i][j] == '1':
                dfs(i, j)
                # 모든 육지 탐색 후 카운트 1 증가
                count += 1
    return count
```
<br/>

